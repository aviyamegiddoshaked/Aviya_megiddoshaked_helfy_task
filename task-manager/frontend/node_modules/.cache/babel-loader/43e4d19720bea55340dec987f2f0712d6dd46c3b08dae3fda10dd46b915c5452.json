{"ast":null,"code":"var _jsxFileName = \"/Users/aviyamegiddoshaked/Desktop/Aviya_megiddoshaked_helfy_task/task-manager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { fetchTasks, createTask, updateTask, deleteTask, toggleTask } from \"./services/api.js\";\nimport TaskList from \"./components/TaskList.js\";\nimport TaskForm from \"./components/TaskForm.js\";\nimport TaskFilter from \"./components/TaskFilter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"idle\"); // idle | loading | error\n  const [error, setError] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\"); // all | completed | pending\n  const [editing, setEditing] = useState(null); // task being edited or null\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setStatus(\"loading\");\n        const data = await fetchTasks();\n        setTasks(data);\n        setStatus(\"idle\");\n      } catch (e) {\n        setError(e.message);\n        setStatus(\"error\");\n      }\n    })();\n  }, []);\n  const filtered = useMemo(() => {\n    if (filter === \"completed\") return tasks.filter(t => t.completed);\n    if (filter === \"pending\") return tasks.filter(t => !t.completed);\n    return tasks;\n  }, [tasks, filter]);\n  async function handleCreate(form) {\n    const created = await createTask(form);\n    setTasks(prev => [...prev, created]);\n  }\n  async function handleUpdate(id, form) {\n    const upd = await updateTask(id, form);\n    setTasks(prev => prev.map(t => t.id === id ? upd : t));\n  }\n  async function handleDelete(id) {\n    await deleteTask(id);\n    setTasks(prev => prev.filter(t => t.id !== id));\n  }\n  async function handleToggle(id) {\n    const toggled = await toggleTask(id);\n    setTasks(prev => prev.map(t => t.id === id ? toggled : t));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n        value: filter,\n        onChange: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"muted\",\n      children: \"Loading tasks\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filtered,\n      onToggle: handleToggle,\n      onEdit: setEditing,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editing ? \"Edit Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        initial: editing,\n        onSubmit: async data => {\n          if (editing) {\n            await handleUpdate(editing.id, data);\n            setEditing(null);\n          } else {\n            await handleCreate(data);\n          }\n        },\n        onCancel: () => setEditing(null)\n      }, (editing === null || editing === void 0 ? void 0 : editing.id) || \"create\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bp9scCG4uVQIlJ9Bu83RErHFGmI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","fetchTasks","createTask","updateTask","deleteTask","toggleTask","TaskList","TaskForm","TaskFilter","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","status","setStatus","error","setError","filter","setFilter","editing","setEditing","data","e","message","filtered","t","completed","handleCreate","form","created","prev","handleUpdate","id","upd","map","handleDelete","handleToggle","toggled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onToggle","onEdit","onDelete","initial","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["/Users/aviyamegiddoshaked/Desktop/Aviya_megiddoshaked_helfy_task/task-manager/frontend/src/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport {\n  fetchTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  toggleTask,\n} from \"./services/api.js\";\nimport TaskList from \"./components/TaskList.js\";\nimport TaskForm from \"./components/TaskForm.js\";\nimport TaskFilter from \"./components/TaskFilter.js\";\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"idle\"); // idle | loading | error\n  const [error, setError] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");  // all | completed | pending\n  const [editing, setEditing] = useState(null); // task being edited or null\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setStatus(\"loading\");\n        const data = await fetchTasks();\n        setTasks(data);\n        setStatus(\"idle\");\n      } catch (e) {\n        setError(e.message);\n        setStatus(\"error\");\n      }\n    })();\n  }, []);\n\n  const filtered = useMemo(() => {\n    if (filter === \"completed\") return tasks.filter(t => t.completed);\n    if (filter === \"pending\")   return tasks.filter(t => !t.completed);\n    return tasks;\n  }, [tasks, filter]);\n\n  async function handleCreate(form) {\n    const created = await createTask(form);\n    setTasks(prev => [...prev, created]);\n  }\n\n  async function handleUpdate(id, form) {\n    const upd = await updateTask(id, form);\n    setTasks(prev => prev.map(t => (t.id === id ? upd : t)));\n  }\n\n  async function handleDelete(id) {\n    await deleteTask(id);\n    setTasks(prev => prev.filter(t => t.id !== id));\n  }\n\n  async function handleToggle(id) {\n    const toggled = await toggleTask(id);\n    setTasks(prev => prev.map(t => (t.id === id ? toggled : t)));\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Task Manager</h1>\n        <TaskFilter value={filter} onChange={setFilter} />\n      </header>\n\n      {status === \"loading\" && <p className=\"muted\">Loading tasksâ€¦</p>}\n      {status === \"error\"   && <p className=\"error\">{error}</p>}\n\n      <TaskList\n        tasks={filtered}\n        onToggle={handleToggle}\n        onEdit={setEditing}\n        onDelete={handleDelete}\n      />\n\n      <section className=\"panel\">\n        <h2>{editing ? \"Edit Task\" : \"Add Task\"}</h2>\n        <TaskForm\n          key={editing?.id || \"create\"}\n          initial={editing}\n          onSubmit={async (data) => {\n            if (editing) {\n              await handleUpdate(editing.id, data);\n              setEditing(null);\n            } else {\n              await handleCreate(data);\n            }\n          }}\n          onCancel={() => setEditing(null)}\n        />\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}