{"ast":null,"code":"var _jsxFileName = \"/Users/aviyamegiddoshaked/Desktop/Aviya_megiddoshaked_helfy_task/task-manager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [err, setErr] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api/tasks\").then(r => r.ok ? r.json() : Promise.reject(\"Failed to fetch tasks\")).then(setTasks).catch(e => setErr(String(e)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"crimson\"\n      },\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(tasks, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o07PdGKGuaRfTak6R5kmkf+s98c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","err","setErr","fetch","then","r","ok","json","Promise","reject","catch","e","String","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/aviyamegiddoshaked/Desktop/Aviya_megiddoshaked_helfy_task/task-manager/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/tasks\")\n      .then(r => (r.ok ? r.json() : Promise.reject(\"Failed to fetch tasks\")))\n      .then(setTasks)\n      .catch(e => setErr(String(e)));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Task Manager</h1>\n      {err && <div style={{color:\"crimson\"}}>{err}</div>}\n      <pre>{JSON.stringify(tasks, null, 2)}</pre>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAACC,CAAC,IAAKA,CAAC,CAACC,EAAE,GAAGD,CAAC,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,uBAAuB,CAAE,CAAC,CACtEL,IAAI,CAACJ,QAAQ,CAAC,CACdU,KAAK,CAACC,CAAC,IAAIT,MAAM,CAACU,MAAM,CAACD,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBjB,GAAG,iBAAIL,OAAA;MAAKuB,KAAK,EAAE;QAACC,KAAK,EAAC;MAAS,CAAE;MAAAN,QAAA,EAAEb;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClDtB,OAAA;MAAAkB,QAAA,EAAMO,IAAI,CAACC,SAAS,CAACvB,KAAK,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACpB,EAAA,CAlBuBD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}